name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  new-gui:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]
    steps:
      - uses: actions/checkout@v2
        name: Checkout Texera
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v2
        name: Cache npm
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependency with npm
        run: npm --prefix core/new-gui ci --progress=false
      - name: Build with npm
        run: npm run --prefix core/new-gui build --prod --progress=false

  amber:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout Texera
      - name: Lint with scalafmt
        run: cd core/amber && sbt scalafmtCheckAll
      - name: Compile with sbt
        run: cd core/amber && sbt clean compile

  old-engine:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Maven
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build with Maven
        run: mvn clean install --batch-mode --file core/pom.xml
